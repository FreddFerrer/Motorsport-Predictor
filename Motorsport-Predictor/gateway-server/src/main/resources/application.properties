spring.application.name=gateway-server
server.port=8080

#Eureka client
eureka.client.service-url.default-zone=http://eureka:password@localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#Users service routes
spring.cloud.gateway.routes[0].id=users-service
spring.cloud.gateway.routes[0].uri=lb://users-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**, /api/groups/**

#Predictions service routes
spring.cloud.gateway.routes[1].id=predictions-service
spring.cloud.gateway.routes[1].uri=lb://predictions-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/predictions/**

#Eureka service routes
spring.cloud.gateway.routes[2].id=eureka-server
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

#Discovery Server Static routes
#Ruta para que se muestren las imagenes y recursos que se muestran en la interfaz web del serv. eureka.
spring.cloud.gateway.routes[3].id=discovery-service-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**

#F1 service routes
spring.cloud.gateway.routes[4].id=f1-service
spring.cloud.gateway.routes[4].uri=lb://f1-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/f1/**

# Notification service routes
spring.cloud.gateway.routes[5].id=notification-service
spring.cloud.gateway.routes[5].uri=lb://notification-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/notifications/**


#Filtros para definir el comportamiento de enrutamiento y manipulacion de sesiones y tokens de autenticacion.
spring.cloud.gateway.default-filters[0]=SaveSession
spring.cloud.gateway.default-filters[1]=TokenRelay

#Keycloak

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9090/realms/microservices-motorsport-predictor-realm

spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.client-id=microservices-motorsport-client
spring.security.oauth2.client.registration.keycloak.client-secret=cKqUA6aHPFAU4kaZjXe7FY1mw1VwVxxh
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/keycloak

#Log
logging.level.root=info
logging.level.org.springframework.cloud.gateway=trace
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator=info
